package me.codego.view

import android.view.View
import kotlin.math.max

/**
 *
 * @author mengxn
 * @date 2021/6/29
 */
class OnOnceClickListener(
    private val strategy: Strategy = Strategy.FIRST,
    private var interval: Long = 300,
    private val onOnceClick: (view: View) -> Unit
) : View.OnClickListener {

    enum class Strategy {
        FIRST,
        LAST
    }

    companion object {

        private const val DEFAULT_EFFECTIVE_TIME = 300L

    }

    private var mLastTime: Long = 0
    private var mCallback: Runnable? = null

    init {
        interval = max(interval, DEFAULT_EFFECTIVE_TIME)
    }

    override fun onClick(v: View) {
        val currentTimeMillis = System.currentTimeMillis()
        when (strategy) {
            Strategy.FIRST -> {
                if (currentTimeMillis - mLastTime > interval) {
                    onOnceClick(v)
                }
            }
            Strategy.LAST -> {
                v.removeCallbacks(mCallback)
                mCallback = Runnable { onOnceClick(v) }
                v.postDelayed(mCallback, interval)
            }
        }
        mLastTime = currentTimeMillis
    }
}
